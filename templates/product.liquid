<div class="product_body clearfix">
    <div class="breadcrumbs">
      {% include 'breadcrumbs' %}
    </div>

    <div class="images">
        {% include 'product-image' %}
    </div> <!-- /.images -->

    <div class="content">
           
        <h3>{{ product.title }}</h3>

        {% if product.price_min < product.compare_at_price_min %}
            <p class="price sale" id="price-preview"><del>{{ product.compare_at_price_min | money }}</del> {{ product.price_min | money }}</p>
        {% else %}
            <p class="price" id="price-preview">{{ product.price_min | money }}{% if product.price_varies %} - {{ product.price_max | money }}{% endif %}</p>
        {% endif %}
        
        <div class="description">
            {{ product.description }}
        </div>

        <form id="add-item-form" action="/cart/add" method="post" class="variants clearfix">
            {% if product.options.size > 1 %}
                <div class="select clearfix">
                    <select id="product-select" name='id'>
                        {% for variant in product.variants %}
                            <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
                        {% endfor %}
                    </select>
                </div>
            {% elsif product.options.size == 1 and product.variants.size > 1 %}
                <div class="select clearfix">
                    <label>{{ product.options[0] }}</label>
                    <select id="product-select" name='id'>
                        {% for variant in product.variants %}
                            <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
                        {% endfor %}
                    </select>
                </div>
            {% else %}
                <input type="hidden" name="id" value="{{ product.variants.first.id }}" />
            {% endif %}
            {% if product.available %}
                <div class="quantity">
                    <label for="quantity">QUANTITY</label> 
                    <input min="1" type="number" id="quantity" name="quantity" value="1" />  
                </div>
                <div class="purchase clearfix">
                    <input type="submit" name="add" id="add-to-cart" value="ADD TO CART" class="cart" />
                    <div id="cart-updated"></div>
                </div>
            {% else %}
                <div class="purchase clearfix">
                    <input type="submit" name="add" id="add-to-cart" value="Sold Out" class="cart disabled" disabled="disabled" />
                </div>
            {% endif %}

        </form>

        <div class="add-favorite">
            {% include 'add-favorite' %}
        </div>

        {% include 'share' %}

    </div><!-- /.content -->
    
  </div> <!-- /.product_body -->
  
  {% include 'related' %}

<script type="text/javascript">

// <![CDATA[  
var selectCallback = function(variant, selector) {
  if (variant && variant.available == true) {
    // selected a valid variant
    jQuery('#add-to-cart').removeClass('disabled').removeAttr('disabled').val('ADD TO BAG'); // remove unavailable class from add-to-cart button, and re-enable button
//    if(variant.price < variant.compare_at_price){
//      jQuery('#price-preview').html(Shopify.formatMoney(variant.price, "{{shop.money_format}}") + " <span>was " + Shopify.formatMoney(variant.compare_at_price, "{{shop.money_format}}") + "</span>");
//    } else {
//      jQuery('#price-preview').html(Shopify.formatMoney(variant.price, "{{shop.money_format}}"));
//    }

  } else {
    // variant doesn't exist
    var message = variant ? "Sold Out" : "Unavailable";    
    jQuery('#add-to-cart').addClass('disabled').attr('disabled', 'disabled').val('Sold Out');      // set add-to-cart button to unavailable class and disable button
    jQuery('#product .variants .price').text(message); // update price-field message
  }
};

function remove(s, t) {
  /*
  **  Remove all occurrences of a token in a string
  **    s  string to be processed
  **    t  token to be removed
  **  returns new string
  */
  i = s.indexOf(t);
  r = "";
  if (i == -1) return s;
  r += s.substring(0,i) + remove(s.substring(i + t.length), t);
  return r;
}

// initialize multi selector for product
jQuery(function() {

  jQuery('.favorites-link.off').click(function(){
    jQuery('.tip').toggle();
  });
 
  
  {% if product.variants.size > 1 or product.options.size > 1 %}
  new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback });
  
    {% assign found_one_in_stock = false %}
    {% for variant in product.variants %}
      {% if variant.available and found_one_in_stock == false %}
        {% assign found_one_in_stock = true %}
        {% for option in product.options %}
          jQuery('#product-select-option-' + {{ forloop.index0 }}).val({{ variant.options[forloop.index0] | json }}).trigger('change');
        {% endfor %}
      {% endif %}
    {% endfor %}
    
  {% endif %}
});
// ]]>
</script>